// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "Bui Vi Quoc",
            "url": "https://www.facebook.com/bviquoc/",
            "email": "21520095@gm.uit.edu.vn"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/authors": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "authors"
                ],
                "summary": "Get all authors",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/authormodel.ResListAuthor"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "authors"
                ],
                "summary": "Create author with name",
                "parameters": [
                    {
                        "description": "Create author",
                        "name": "author",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/authormodel.ReqCreateAuthor"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "author id",
                        "schema": {
                            "$ref": "#/definitions/authormodel.ResCreateAuthor"
                        }
                    }
                }
            }
        },
        "/books": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "books"
                ],
                "summary": "Create Book",
                "parameters": [
                    {
                        "description": "Create Book",
                        "name": "booktitle",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/bookmodel.ReqCreateBook"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "book id",
                        "schema": {
                            "$ref": "#/definitions/bookmodel.ResCreateBook"
                        }
                    }
                }
            }
        },
        "/booktitles": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "booktitles"
                ],
                "summary": "Get all booktitles",
                "parameters": [
                    {
                        "type": "integer",
                        "example": 10,
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 1,
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 11,
                        "name": "total",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 1709500431,
                        "name": "createdAtFrom",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 1709500431,
                        "name": "createdAtTo",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "example": true,
                        "name": "isActive",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "",
                        "name": "search",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/booktitlemodel.ResListBookTitle"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "booktitles"
                ],
                "summary": "Create booktitle name, desc, authors, categories.",
                "parameters": [
                    {
                        "description": "Create booktitle",
                        "name": "booktitle",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/booktitlemodel.ReqCreateBookTitle"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "booktitle id",
                        "schema": {
                            "$ref": "#/definitions/booktitlemodel.ResCreateBookTitle"
                        }
                    }
                }
            }
        },
        "/booktitles/:id": {
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "booktitles"
                ],
                "summary": "Delete booktitle by id",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.ResSuccess"
                        }
                    }
                }
            }
        },
        "/booktitles/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "booktitles"
                ],
                "summary": "Get booktitle detail by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Booktitle ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/booktitlemodel.ResBookTitleDetail"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "$ref": "#/definitions/common.AppError"
                        }
                    }
                }
            }
        },
        "/booktitles/{id}/info": {
            "patch": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "booktitles"
                ],
                "summary": "Update info booktitle",
                "parameters": [
                    {
                        "type": "string",
                        "description": "booktitle id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "booktitle info to update",
                        "name": "booktitle",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/booktitlemodel.ReqUpdateBookInfo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "status of response",
                        "schema": {
                            "$ref": "#/definitions/common.ResSuccess"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "$ref": "#/definitions/common.AppError"
                        }
                    }
                }
            }
        },
        "/categories": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "categories"
                ],
                "summary": "Get all categories",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/categorymodel.ResListCategory"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "categories"
                ],
                "summary": "Create category with name",
                "parameters": [
                    {
                        "description": "Create category",
                        "name": "category",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/categorymodel.ReqCreateCategory"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "category id",
                        "schema": {
                            "$ref": "#/definitions/categorymodel.ResCreateCategory"
                        }
                    }
                }
            }
        },
        "/features": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "features"
                ],
                "summary": "List feature",
                "responses": {
                    "200": {
                        "description": "list feature",
                        "schema": {
                            "$ref": "#/definitions/featuremodel.ResListFeature"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "$ref": "#/definitions/common.AppError"
                        }
                    }
                }
            }
        },
        "/importNotes": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "importNotes"
                ],
                "summary": "List import note",
                "parameters": [
                    {
                        "type": "integer",
                        "example": 10,
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 1,
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 11,
                        "name": "total",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 1709500431,
                        "name": "closedAtFrom",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 1709500431,
                        "name": "closedAtTo",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "user name",
                        "name": "closedBy",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 1709500431,
                        "name": "createdAtFrom",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 1709500431,
                        "name": "createdAtTo",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "user name",
                        "name": "createdBy",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "example": 1000,
                        "name": "maxPrice",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "example": 10,
                        "name": "minPrice",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "Done",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "supplier name",
                        "name": "supplier",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "list import note",
                        "schema": {
                            "$ref": "#/definitions/importnotemodel.ResListImportNote"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "$ref": "#/definitions/common.AppError"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "importNotes"
                ],
                "summary": "Create import note",
                "parameters": [
                    {
                        "description": "import note need to create",
                        "name": "importNote",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/importnotemodel.ReqCreateImportNote"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "import note id",
                        "schema": {
                            "$ref": "#/definitions/importnotemodel.ResCreateImportNote"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "$ref": "#/definitions/common.AppError"
                        }
                    }
                }
            }
        },
        "/importNotes/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "importNotes"
                ],
                "summary": "See detail import note",
                "parameters": [
                    {
                        "type": "string",
                        "description": "import note id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "import note",
                        "schema": {
                            "$ref": "#/definitions/importnotemodel.ResSeeDetailImportNote"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "$ref": "#/definitions/common.AppError"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "importNotes"
                ],
                "summary": "Change status import note",
                "parameters": [
                    {
                        "type": "string",
                        "description": "import note id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "status need to update of import note",
                        "name": "importNote",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/importnotemodel.ReqUpdateImportNote"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "status of response",
                        "schema": {
                            "$ref": "#/definitions/common.ResSuccess"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "$ref": "#/definitions/common.AppError"
                        }
                    }
                }
            }
        },
        "/inventoryCheckNotes": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "inventoryCheckNotes"
                ],
                "summary": "List inventory check note",
                "parameters": [
                    {
                        "type": "integer",
                        "example": 10,
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 1,
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 11,
                        "name": "total",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 1709500431,
                        "name": "createAtFrom",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 1709500431,
                        "name": "createAtTo",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "user name",
                        "name": "createBy",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "",
                        "name": "search",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "list inventory check note",
                        "schema": {
                            "$ref": "#/definitions/inventorychecknotemodel.ResListInventoryCheckNote"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "$ref": "#/definitions/common.AppError"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "inventoryCheckNotes"
                ],
                "summary": "Create inventory check note",
                "parameters": [
                    {
                        "description": "inventory check note need to create",
                        "name": "inventoryCheckNote",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/inventorychecknotemodel.ReqCreateInventoryCheckNote"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "inventory check note id",
                        "schema": {
                            "$ref": "#/definitions/inventorychecknotemodel.ResCreateInventoryCheckNote"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "$ref": "#/definitions/common.AppError"
                        }
                    }
                }
            }
        },
        "/inventoryCheckNotes/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "inventoryCheckNotes"
                ],
                "summary": "See detail inventory check note",
                "parameters": [
                    {
                        "type": "string",
                        "description": "inventory check note id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "inventory check note",
                        "schema": {
                            "$ref": "#/definitions/inventorychecknotemodel.ResSeeDetailInventoryCheckNote"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "$ref": "#/definitions/common.AppError"
                        }
                    }
                }
            }
        },
        "/invoices": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "invoices"
                ],
                "summary": "List invoice",
                "parameters": [
                    {
                        "type": "integer",
                        "example": 10,
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 1,
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 11,
                        "name": "total",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "user name",
                        "name": "createdBy",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "name": "maxPrice",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "name": "minPrice",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "search",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "list invoice",
                        "schema": {
                            "$ref": "#/definitions/invoicemodel.ResListInvoice"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "$ref": "#/definitions/common.AppError"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "invoices"
                ],
                "summary": "Create invoice",
                "parameters": [
                    {
                        "description": "invoice need to create",
                        "name": "invoice",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/invoicemodel.ReqCreateInvoice"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "invoice id",
                        "schema": {
                            "$ref": "#/definitions/invoicemodel.ResCreateInvoice"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "$ref": "#/definitions/common.AppError"
                        }
                    }
                }
            }
        },
        "/invoices/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "invoices"
                ],
                "summary": "See detail invoice",
                "parameters": [
                    {
                        "type": "string",
                        "description": "invoice id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "invoice",
                        "schema": {
                            "$ref": "#/definitions/invoicemodel.ResSeeDetailInvoice"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "$ref": "#/definitions/common.AppError"
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Login",
                "parameters": [
                    {
                        "description": "login information",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/usermodel.ReqLoginUser"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "user token",
                        "schema": {
                            "$ref": "#/definitions/usermodel.Account"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "$ref": "#/definitions/common.AppError"
                        }
                    }
                }
            }
        },
        "/publishers": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "publishers"
                ],
                "summary": "Get all publishers",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/publishermodel.ResListPublisher"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "publishers"
                ],
                "summary": "Create publisher with name",
                "parameters": [
                    {
                        "description": "Create publisher",
                        "name": "publisher",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/publishermodel.ReqCreatePublisher"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "publisher id",
                        "schema": {
                            "$ref": "#/definitions/publishermodel.ResCreatePublisher"
                        }
                    }
                }
            }
        },
        "/reports/debt": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "reports"
                ],
                "summary": "Find supplier debt report",
                "parameters": [
                    {
                        "description": "time from and time to",
                        "name": "condition",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/supplierdebtreportmodel.ReqFindSupplierDebtReport"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "supplier debt report",
                        "schema": {
                            "$ref": "#/definitions/supplierdebtreportmodel.ResFindSupplierDebtReport"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "$ref": "#/definitions/common.AppError"
                        }
                    }
                }
            }
        },
        "/reports/sale": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "reports"
                ],
                "summary": "Find sale report",
                "parameters": [
                    {
                        "description": "time from and time to",
                        "name": "condition",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/salereportmodel.ReqFindSaleReport"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "sale report",
                        "schema": {
                            "$ref": "#/definitions/salereportmodel.ResFindSaleReport"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "$ref": "#/definitions/common.AppError"
                        }
                    }
                }
            }
        },
        "/reports/stock": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "reports"
                ],
                "summary": "Find stock report",
                "parameters": [
                    {
                        "description": "time from and time to",
                        "name": "condition",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/stockreportmodel.ReqFindStockReport"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "stock report",
                        "schema": {
                            "$ref": "#/definitions/stockreportmodel.ResFindStockReport"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "$ref": "#/definitions/common.AppError"
                        }
                    }
                }
            }
        },
        "/roles": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "roles"
                ],
                "summary": "List role",
                "responses": {
                    "200": {
                        "description": "list role",
                        "schema": {
                            "$ref": "#/definitions/rolemodel.ResListRole"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "$ref": "#/definitions/common.AppError"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "roles"
                ],
                "summary": "Create role",
                "parameters": [
                    {
                        "description": "role need to create",
                        "name": "role",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/rolemodel.ReqCreateRole"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "role id",
                        "schema": {
                            "$ref": "#/definitions/rolemodel.ResCreateRole"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "$ref": "#/definitions/common.AppError"
                        }
                    }
                }
            }
        },
        "/roles/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "roles"
                ],
                "summary": "See detail information of role",
                "parameters": [
                    {
                        "type": "string",
                        "description": "role id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "detailed information of role",
                        "schema": {
                            "$ref": "#/definitions/rolemodel.ResSeeDetailRole"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "$ref": "#/definitions/common.AppError"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "roles"
                ],
                "summary": "Update info role",
                "parameters": [
                    {
                        "type": "string",
                        "description": "role id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "role info to update",
                        "name": "role",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/rolemodel.ReqUpdateRole"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "status of response",
                        "schema": {
                            "$ref": "#/definitions/common.ResSuccess"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "$ref": "#/definitions/common.AppError"
                        }
                    }
                }
            }
        },
        "/suppliers": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "suppliers"
                ],
                "summary": "List supplier",
                "parameters": [
                    {
                        "type": "integer",
                        "example": 10,
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 1,
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 11,
                        "name": "total",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "example": 100000,
                        "name": "maxDebt",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "example": 10,
                        "name": "minDebt",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "id, name, phone, email",
                        "name": "search",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "list supplier",
                        "schema": {
                            "$ref": "#/definitions/suppliermodel.ResListSupplier"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "$ref": "#/definitions/common.AppError"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "suppliers"
                ],
                "summary": "Create supplier",
                "parameters": [
                    {
                        "description": "supplier need to create",
                        "name": "supplier",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/suppliermodel.ReqCreateSupplier"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "supplier id",
                        "schema": {
                            "$ref": "#/definitions/suppliermodel.ResSupplierCreate"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "$ref": "#/definitions/common.AppError"
                        }
                    }
                }
            }
        },
        "/suppliers/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "suppliers"
                ],
                "summary": "See detail of supplier",
                "parameters": [
                    {
                        "type": "string",
                        "description": "supplier id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "supplier",
                        "schema": {
                            "$ref": "#/definitions/suppliermodel.Supplier"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "$ref": "#/definitions/common.AppError"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "suppliers"
                ],
                "summary": "Update info supplier",
                "parameters": [
                    {
                        "type": "string",
                        "description": "supplier id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "supplier info to update",
                        "name": "supplier",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/suppliermodel.ReqUpdateInfoSupplier"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "status of response",
                        "schema": {
                            "$ref": "#/definitions/common.ResSuccess"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "$ref": "#/definitions/common.AppError"
                        }
                    }
                }
            }
        },
        "/suppliers/{id}/debts": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "suppliers"
                ],
                "summary": "See debts of supplier",
                "parameters": [
                    {
                        "type": "string",
                        "description": "supplier id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "example": 10,
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 1,
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 11,
                        "name": "total",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 1709500431,
                        "name": "from",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 1709500431,
                        "name": "to",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "supplier",
                        "schema": {
                            "$ref": "#/definitions/suppliermodel.ResSeeDebtSupplier"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "$ref": "#/definitions/common.AppError"
                        }
                    }
                }
            }
        },
        "/suppliers/{id}/importNotes": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "suppliers"
                ],
                "summary": "See import notes of supplier",
                "parameters": [
                    {
                        "type": "string",
                        "description": "supplier id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "example": 10,
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 1,
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 11,
                        "name": "total",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 1709500431,
                        "name": "from",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 1709500431,
                        "name": "to",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "supplier",
                        "schema": {
                            "$ref": "#/definitions/suppliermodel.ResSeeImportNoteSupplier"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "$ref": "#/definitions/common.AppError"
                        }
                    }
                }
            }
        },
        "/suppliers/{id}/pay": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "suppliers"
                ],
                "summary": "Pay supplier",
                "parameters": [
                    {
                        "type": "string",
                        "description": "supplier id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "pay information",
                        "name": "supplier",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/suppliermodel.ReqUpdateDebtSupplier"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "status of response",
                        "schema": {
                            "$ref": "#/definitions/common.ResSuccess"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "$ref": "#/definitions/common.AppError"
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "List user",
                "parameters": [
                    {
                        "type": "integer",
                        "example": 10,
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 1,
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 11,
                        "name": "total",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "example": true,
                        "name": "active",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "id, name, phone, email, address",
                        "name": "search",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "list user",
                        "schema": {
                            "$ref": "#/definitions/usermodel.ResListUser"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "$ref": "#/definitions/common.AppError"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Create user",
                "parameters": [
                    {
                        "description": "user need to create",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/usermodel.ReqCreateUser"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "user id",
                        "schema": {
                            "$ref": "#/definitions/usermodel.ResCreateUser"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "$ref": "#/definitions/common.AppError"
                        }
                    }
                }
            }
        },
        "/users/status": {
            "patch": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Change status users",
                "parameters": [
                    {
                        "description": "list user id and status want to be updated",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/usermodel.ReqUpdateStatusUsers"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "status of response",
                        "schema": {
                            "$ref": "#/definitions/common.ResSuccess"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "$ref": "#/definitions/common.AppError"
                        }
                    }
                }
            }
        },
        "/users/{id}/info": {
            "patch": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Update info user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "user info to update",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/usermodel.ReqUpdateInfoUser"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "status of response",
                        "schema": {
                            "$ref": "#/definitions/common.ResSuccess"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "$ref": "#/definitions/common.AppError"
                        }
                    }
                }
            }
        },
        "/users/{id}/password": {
            "patch": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Update password user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "old and new password",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/usermodel.ReqUpdatePasswordUser"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "status of response",
                        "schema": {
                            "$ref": "#/definitions/common.ResSuccess"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "$ref": "#/definitions/common.AppError"
                        }
                    }
                }
            }
        },
        "/users/{id}/reset": {
            "patch": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Reset password user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "sender's password",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/usermodel.ReqResetPasswordUser"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "status of response",
                        "schema": {
                            "$ref": "#/definitions/common.ResSuccess"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "$ref": "#/definitions/common.AppError"
                        }
                    }
                }
            }
        },
        "/users/{id}/role": {
            "patch": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Change role user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "role id want to update",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/usermodel.ReqUpdateRoleUser"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "status of response",
                        "schema": {
                            "$ref": "#/definitions/common.ResSuccess"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "$ref": "#/definitions/common.AppError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "authormodel.Author": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "isActive": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "authormodel.Filter": {
            "type": "object",
            "properties": {
                "searchKey": {
                    "type": "string"
                }
            }
        },
        "authormodel.ReqCreateAuthor": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "example": "Nguyễn Nhật Ánh"
                }
            }
        },
        "authormodel.ResCreateAuthor": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                }
            }
        },
        "authormodel.ResListAuthor": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/authormodel.Author"
                    }
                },
                "filter": {
                    "$ref": "#/definitions/authormodel.Filter"
                },
                "paging": {
                    "$ref": "#/definitions/common.Paging"
                }
            }
        },
        "bookmodel.ReqCreateBook": {
            "type": "object",
            "properties": {
                "bookTitleId": {
                    "type": "string"
                },
                "edition": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "listedPrice": {
                    "description": "Quantity    *int    ` + "`" + `json:\"quantity\" gorm:\"column:quantity\"` + "`" + `",
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "publisherId": {
                    "type": "string"
                },
                "sellPrice": {
                    "type": "integer"
                }
            }
        },
        "bookmodel.ResCreateBook": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                }
            }
        },
        "bookmodel.SimpleBook": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "example": "idOfBook"
                },
                "name": {
                    "type": "string",
                    "example": "Doraemon"
                }
            }
        },
        "booktitlemodel.BookTitleDetail": {
            "type": "object",
            "properties": {
                "authors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/authormodel.Author"
                    }
                },
                "categories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/categorymodel.Category"
                    }
                },
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "type": "string"
                },
                "desc": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "isActive": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "booktitlemodel.Filter": {
            "type": "object",
            "properties": {
                "createdAtFrom": {
                    "type": "integer",
                    "example": 1709500431
                },
                "createdAtTo": {
                    "type": "integer",
                    "example": 1709500431
                },
                "isActive": {
                    "type": "boolean",
                    "example": true
                },
                "searchKey": {
                    "type": "string",
                    "example": ""
                }
            }
        },
        "booktitlemodel.ReqCreateBookTitle": {
            "type": "object",
            "properties": {
                "authorIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "tgnna"
                    ]
                },
                "categoryIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "dmtt",
                        "dmtruyen"
                    ]
                },
                "desc": {
                    "type": "string",
                    "example": "Tôi Là Bêtô là tác phẩm của nhà văn chuyên viết cho thanh thiếu niên Nguyễn Nhật Ánh."
                },
                "id": {
                    "type": "string",
                    "example": "bookId"
                },
                "name": {
                    "type": "string",
                    "example": "Tôi là Bêtô"
                }
            }
        },
        "booktitlemodel.ReqUpdateBookInfo": {
            "type": "object",
            "properties": {
                "authorIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "tgnna"
                    ]
                },
                "categoryIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "dmtt",
                        "dmtruyen"
                    ]
                },
                "desc": {
                    "type": "string",
                    "example": "Tôi Là Bêtô là tác phẩm của nhà văn chuyên viết cho thanh thiếu niên Nguyễn Nhật Ánh."
                },
                "id": {
                    "type": "string",
                    "example": "bookId"
                },
                "name": {
                    "type": "string",
                    "example": "Tôi là Bêtô"
                }
            }
        },
        "booktitlemodel.ResBookTitleDetail": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/booktitlemodel.BookTitleDetail"
                }
            }
        },
        "booktitlemodel.ResCreateBookTitle": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                }
            }
        },
        "booktitlemodel.ResListBookTitle": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/booktitlemodel.BookTitleDetail"
                    }
                },
                "filter": {
                    "$ref": "#/definitions/booktitlemodel.Filter"
                },
                "paging": {
                    "$ref": "#/definitions/common.Paging"
                }
            }
        },
        "categorymodel.Category": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "isActive": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "categorymodel.Filter": {
            "type": "object",
            "properties": {
                "searchKey": {
                    "type": "string"
                }
            }
        },
        "categorymodel.ReqCreateCategory": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "example": "Trinh thám"
                }
            }
        },
        "categorymodel.ResCreateCategory": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                }
            }
        },
        "categorymodel.ResListCategory": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/categorymodel.Category"
                    }
                },
                "filter": {
                    "$ref": "#/definitions/categorymodel.Filter"
                },
                "paging": {
                    "$ref": "#/definitions/common.Paging"
                }
            }
        },
        "common.AppError": {
            "type": "object",
            "properties": {
                "errorKey": {
                    "type": "string",
                    "example": "ErrKey"
                },
                "log": {
                    "type": "string",
                    "example": "error log"
                },
                "message": {
                    "type": "string",
                    "example": "error message"
                },
                "statusCode": {
                    "type": "integer",
                    "example": 400
                }
            }
        },
        "common.Paging": {
            "type": "object",
            "properties": {
                "limit": {
                    "type": "integer",
                    "example": 10
                },
                "page": {
                    "type": "integer",
                    "example": 1
                },
                "total": {
                    "type": "integer",
                    "example": 11
                }
            }
        },
        "common.ResSuccess": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "enum.DebtType": {
            "type": "string",
            "enum": [
                "Pay",
                "Debt"
            ],
            "x-enum-varnames": [
                "Pay",
                "Debt"
            ]
        },
        "featuremodel.Feature": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string",
                    "example": "Xem nhân viên"
                },
                "groupName": {
                    "type": "string",
                    "example": "Nhân viên"
                },
                "id": {
                    "type": "string",
                    "example": "feature id"
                }
            }
        },
        "featuremodel.ResFeatureDetail": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string",
                    "example": "Xem nhân viên"
                },
                "groupName": {
                    "type": "string",
                    "example": "Nhân viên"
                },
                "id": {
                    "type": "string",
                    "example": "feature id"
                },
                "isHas": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "featuremodel.ResListFeature": {
            "type": "object",
            "properties": {
                "data": {
                    "description": "Data contains the detailed information about features.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/featuremodel.Feature"
                    }
                }
            }
        },
        "filter.SupplierDebtFilter": {
            "type": "object",
            "properties": {
                "from": {
                    "type": "integer",
                    "example": 1709500431
                },
                "to": {
                    "type": "integer",
                    "example": 1709500431
                }
            }
        },
        "filter.SupplierImportFilter": {
            "type": "object",
            "properties": {
                "from": {
                    "type": "integer",
                    "example": 1709500431
                },
                "to": {
                    "type": "integer",
                    "example": 1709500431
                }
            }
        },
        "importnotedetailmodel.ImportNoteDetail": {
            "type": "object",
            "properties": {
                "book": {
                    "$ref": "#/definitions/bookmodel.SimpleBook"
                },
                "importNoteId": {
                    "type": "string",
                    "example": "import note id"
                },
                "price": {
                    "type": "number"
                },
                "qtyImport": {
                    "type": "integer"
                }
            }
        },
        "importnotedetailmodel.ImportNoteDetailCreate": {
            "type": "object",
            "properties": {
                "bookId": {
                    "type": "string",
                    "example": "book id"
                },
                "isReplacePrice": {
                    "type": "boolean",
                    "example": true
                },
                "price": {
                    "type": "integer",
                    "example": 60000
                },
                "qtyImport": {
                    "type": "integer",
                    "example": 100
                }
            }
        },
        "importnotemodel.Filter": {
            "type": "object",
            "properties": {
                "closedAtFrom": {
                    "type": "integer",
                    "example": 1709500431
                },
                "closedAtTo": {
                    "type": "integer",
                    "example": 1709500431
                },
                "closedBy": {
                    "type": "string",
                    "example": "user name"
                },
                "createdAtFrom": {
                    "type": "integer",
                    "example": 1709500431
                },
                "createdAtTo": {
                    "type": "integer",
                    "example": 1709500431
                },
                "createdBy": {
                    "type": "string",
                    "example": "user name"
                },
                "maxPrice": {
                    "type": "number",
                    "example": 1000
                },
                "minPrice": {
                    "type": "number",
                    "example": 10
                },
                "searchKey": {
                    "type": "string",
                    "example": ""
                },
                "status": {
                    "type": "string",
                    "example": "Done"
                },
                "supplier": {
                    "type": "string",
                    "example": "supplier name"
                }
            }
        },
        "importnotemodel.ImportNote": {
            "type": "object",
            "properties": {
                "closedAt": {
                    "type": "string",
                    "example": "2023-12-03T15:02:19.62113565Z"
                },
                "closedBy": {
                    "$ref": "#/definitions/usermodel.SimpleUser"
                },
                "createdAt": {
                    "type": "string",
                    "example": "2023-12-03T15:02:19.62113565Z"
                },
                "createdBy": {
                    "$ref": "#/definitions/usermodel.SimpleUser"
                },
                "id": {
                    "type": "string",
                    "example": "import note id"
                },
                "status": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/importnotemodel.ImportNoteStatus"
                        }
                    ],
                    "example": "Done"
                },
                "supplier": {
                    "$ref": "#/definitions/importnotemodel.SimpleSupplier"
                },
                "totalPrice": {
                    "type": "integer",
                    "example": 120000
                }
            }
        },
        "importnotemodel.ImportNoteStatus": {
            "type": "string",
            "enum": [
                "InProgress",
                "Done",
                "Cancel"
            ],
            "x-enum-varnames": [
                "InProgress",
                "Done",
                "Cancel"
            ]
        },
        "importnotemodel.ReqCreateImportNote": {
            "type": "object",
            "properties": {
                "details": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/importnotedetailmodel.ImportNoteDetailCreate"
                    }
                },
                "id": {
                    "type": "string",
                    "example": ""
                },
                "supplierId": {
                    "type": "string",
                    "example": "supplier id"
                }
            }
        },
        "importnotemodel.ReqUpdateImportNote": {
            "type": "object",
            "properties": {
                "status": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/importnotemodel.ImportNoteStatus"
                        }
                    ],
                    "example": "Done"
                }
            }
        },
        "importnotemodel.ResCreateImportNote": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "string",
                    "example": "123"
                }
            }
        },
        "importnotemodel.ResDetailImportNote": {
            "type": "object",
            "properties": {
                "closedAt": {
                    "type": "string",
                    "example": "2023-12-03T15:02:19.62113565Z"
                },
                "closedBy": {
                    "$ref": "#/definitions/usermodel.SimpleUser"
                },
                "createdAt": {
                    "type": "string",
                    "example": "2023-12-03T15:02:19.62113565Z"
                },
                "createdBy": {
                    "$ref": "#/definitions/usermodel.SimpleUser"
                },
                "details": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/importnotedetailmodel.ImportNoteDetail"
                    }
                },
                "id": {
                    "type": "string",
                    "example": "import note id"
                },
                "status": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/importnotemodel.ImportNoteStatus"
                        }
                    ],
                    "example": "Done"
                },
                "supplier": {
                    "$ref": "#/definitions/importnotemodel.SimpleSupplier"
                },
                "totalPrice": {
                    "type": "integer",
                    "example": 120000
                }
            }
        },
        "importnotemodel.ResListImportNote": {
            "type": "object",
            "properties": {
                "data": {
                    "description": "Data contains list of import note.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/importnotemodel.ImportNote"
                    }
                },
                "filter": {
                    "description": "Filter contains the filter parameters used to retrieve import note.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/importnotemodel.Filter"
                        }
                    ]
                },
                "paging": {
                    "description": "Paging provides information about pagination.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/common.Paging"
                        }
                    ]
                }
            }
        },
        "importnotemodel.ResSeeDetailImportNote": {
            "type": "object",
            "properties": {
                "data": {
                    "description": "Data contains the detailed information about import note details.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/importnotemodel.ResDetailImportNote"
                        }
                    ]
                }
            }
        },
        "importnotemodel.SimpleSupplier": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "example": "123"
                },
                "name": {
                    "type": "string",
                    "example": "Nguyễn Văn A"
                },
                "phone": {
                    "type": "string",
                    "example": "0123456789"
                }
            }
        },
        "inventorychecknotedetailmodel.InventoryCheckNoteDetail": {
            "type": "object",
            "properties": {
                "book": {
                    "$ref": "#/definitions/bookmodel.SimpleBook"
                },
                "difference": {
                    "type": "integer",
                    "example": 100
                },
                "final": {
                    "type": "integer",
                    "example": 200
                },
                "initial": {
                    "type": "integer",
                    "example": 100
                },
                "inventoryCheckNoteId": {
                    "type": "string",
                    "example": "inventory check note id"
                }
            }
        },
        "inventorychecknotedetailmodel.InventoryCheckNoteDetailCreate": {
            "type": "object",
            "properties": {
                "bookId": {
                    "type": "string",
                    "example": "book id"
                },
                "difference": {
                    "type": "integer",
                    "example": 100
                }
            }
        },
        "inventorychecknotemodel.Filter": {
            "type": "object",
            "properties": {
                "createAtFrom": {
                    "type": "integer",
                    "example": 1709500431
                },
                "createAtTo": {
                    "type": "integer",
                    "example": 1709500431
                },
                "createBy": {
                    "type": "string",
                    "example": "user name"
                },
                "searchKey": {
                    "type": "string",
                    "example": ""
                }
            }
        },
        "inventorychecknotemodel.InventoryCheckNote": {
            "type": "object",
            "properties": {
                "createAt": {
                    "type": "string",
                    "example": "2023-12-03T15:02:19.62113565Z"
                },
                "createBy": {
                    "$ref": "#/definitions/usermodel.SimpleUser"
                },
                "id": {
                    "type": "string",
                    "example": "inventory check note id"
                },
                "qtyAfterAdjust": {
                    "type": "integer",
                    "example": 200
                },
                "qtyDifferent": {
                    "type": "integer",
                    "example": 100
                }
            }
        },
        "inventorychecknotemodel.ReqCreateInventoryCheckNote": {
            "type": "object",
            "properties": {
                "details": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/inventorychecknotedetailmodel.InventoryCheckNoteDetailCreate"
                    }
                },
                "id": {
                    "type": "string",
                    "example": ""
                }
            }
        },
        "inventorychecknotemodel.ResCreateInventoryCheckNote": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "string",
                    "example": "123"
                }
            }
        },
        "inventorychecknotemodel.ResDetailInventoryCheckNote": {
            "type": "object",
            "properties": {
                "createAt": {
                    "type": "string",
                    "example": "2023-12-03T15:02:19.62113565Z"
                },
                "createBy": {
                    "$ref": "#/definitions/usermodel.SimpleUser"
                },
                "details": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/inventorychecknotedetailmodel.InventoryCheckNoteDetail"
                    }
                },
                "id": {
                    "type": "string",
                    "example": "inventory check note id"
                },
                "qtyAfterAdjust": {
                    "type": "integer",
                    "example": 200
                },
                "qtyDifferent": {
                    "type": "integer",
                    "example": 100
                }
            }
        },
        "inventorychecknotemodel.ResListInventoryCheckNote": {
            "type": "object",
            "properties": {
                "data": {
                    "description": "Data contains list of inventory check note.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/inventorychecknotemodel.InventoryCheckNote"
                    }
                },
                "filter": {
                    "description": "Filter contains the filter parameters used to retrieve inventory check note.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/inventorychecknotemodel.Filter"
                        }
                    ]
                },
                "paging": {
                    "description": "Paging provides information about pagination.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/common.Paging"
                        }
                    ]
                }
            }
        },
        "inventorychecknotemodel.ResSeeDetailInventoryCheckNote": {
            "type": "object",
            "properties": {
                "data": {
                    "description": "Data contains the detailed information about inventory check note details.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/inventorychecknotemodel.ResDetailInventoryCheckNote"
                        }
                    ]
                },
                "paging": {
                    "description": "Paging provides information about pagination.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/common.Paging"
                        }
                    ]
                }
            }
        },
        "invoicedetailmodel.InvoiceDetail": {
            "type": "object",
            "properties": {
                "book": {
                    "$ref": "#/definitions/bookmodel.SimpleBook"
                },
                "qty": {
                    "type": "integer",
                    "example": 2
                },
                "unitPrice": {
                    "type": "integer",
                    "example": 60000
                }
            }
        },
        "invoicedetailmodel.ReqCreateInvoiceDetail": {
            "type": "object",
            "properties": {
                "bookId": {
                    "type": "string",
                    "example": "book id"
                },
                "qty": {
                    "type": "integer",
                    "example": 2
                }
            }
        },
        "invoicemodel.Filter": {
            "type": "object",
            "properties": {
                "createdBy": {
                    "type": "string",
                    "example": "user name"
                },
                "maxPrice": {
                    "type": "number"
                },
                "minPrice": {
                    "type": "number"
                },
                "searchKey": {
                    "type": "string"
                }
            }
        },
        "invoicemodel.Invoice": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string",
                    "example": "2023-12-03T15:02:19.62113565Z"
                },
                "createdBy": {
                    "$ref": "#/definitions/usermodel.SimpleUser"
                },
                "id": {
                    "type": "string",
                    "example": "123"
                },
                "totalPrice": {
                    "type": "number",
                    "example": 120000
                }
            }
        },
        "invoicemodel.ReqCreateInvoice": {
            "type": "object",
            "properties": {
                "details": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/invoicedetailmodel.ReqCreateInvoiceDetail"
                    }
                }
            }
        },
        "invoicemodel.ResCreateInvoice": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/invoicemodel.ResCreateInvoiceData"
                }
            }
        },
        "invoicemodel.ResCreateInvoiceData": {
            "type": "object",
            "properties": {
                "createdBy": {
                    "$ref": "#/definitions/usermodel.SimpleUser"
                },
                "details": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/invoicedetailmodel.ReqCreateInvoiceDetail"
                    }
                },
                "id": {
                    "type": "string",
                    "example": "123"
                },
                "total": {
                    "type": "integer",
                    "example": 120000
                }
            }
        },
        "invoicemodel.ResDetailInvoice": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string",
                    "example": "2023-12-03T15:02:19.62113565Z"
                },
                "createdBy": {
                    "$ref": "#/definitions/usermodel.SimpleUser"
                },
                "details": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/invoicedetailmodel.InvoiceDetail"
                    }
                },
                "id": {
                    "type": "string",
                    "example": "123"
                },
                "totalPrice": {
                    "type": "number",
                    "example": 120000
                }
            }
        },
        "invoicemodel.ResListInvoice": {
            "type": "object",
            "properties": {
                "data": {
                    "description": "Data contains list of invoice.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/invoicemodel.Invoice"
                    }
                },
                "filter": {
                    "description": "Filter contains the filter parameters used to retrieve invoice.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/invoicemodel.Filter"
                        }
                    ]
                },
                "paging": {
                    "description": "Paging provides information about pagination.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/common.Paging"
                        }
                    ]
                }
            }
        },
        "invoicemodel.ResSeeDetailInvoice": {
            "type": "object",
            "properties": {
                "data": {
                    "description": "Data contains the detailed information about invoice details.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/invoicemodel.ResDetailInvoice"
                        }
                    ]
                }
            }
        },
        "publishermodel.Filter": {
            "type": "object",
            "properties": {
                "searchKey": {
                    "type": "string"
                }
            }
        },
        "publishermodel.Publisher": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "publishermodel.ReqCreatePublisher": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "example": "Kim Đồng"
                }
            }
        },
        "publishermodel.ResCreatePublisher": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                }
            }
        },
        "publishermodel.ResListPublisher": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/publishermodel.Publisher"
                    }
                },
                "filter": {
                    "$ref": "#/definitions/publishermodel.Filter"
                },
                "paging": {
                    "$ref": "#/definitions/common.Paging"
                }
            }
        },
        "rolemodel.ReqCreateRole": {
            "type": "object",
            "properties": {
                "features": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string",
                    "example": "user"
                }
            }
        },
        "rolemodel.ReqUpdateRole": {
            "type": "object",
            "properties": {
                "features": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string",
                    "example": "nếu tên không đổi thì không cần trường này"
                }
            }
        },
        "rolemodel.ResCreateRole": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "string",
                    "example": "123"
                }
            }
        },
        "rolemodel.ResListRole": {
            "type": "object",
            "properties": {
                "data": {
                    "description": "Data contains the detailed information about roles.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/rolemodel.SimpleRole"
                    }
                }
            }
        },
        "rolemodel.ResSeeDetailRole": {
            "type": "object",
            "properties": {
                "data": {
                    "description": "Data contains the detailed information about features.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/featuremodel.ResFeatureDetail"
                    }
                },
                "id": {
                    "type": "string",
                    "example": "role id"
                },
                "name": {
                    "type": "string",
                    "example": "admin"
                }
            }
        },
        "rolemodel.SimpleRole": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "example": "role id"
                },
                "name": {
                    "type": "string",
                    "example": "admin"
                }
            }
        },
        "salereportetailmodel.SaleReportDetail": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "integer",
                    "example": 10
                },
                "book": {
                    "$ref": "#/definitions/bookmodel.SimpleBook"
                },
                "totalSales": {
                    "type": "integer",
                    "example": 100000
                }
            }
        },
        "salereportmodel.ReqFindSaleReport": {
            "type": "object",
            "properties": {
                "timeFrom": {
                    "type": "integer",
                    "example": 1701388800
                },
                "timeTo": {
                    "type": "integer",
                    "example": 1704067199
                }
            }
        },
        "salereportmodel.ResFindSaleReport": {
            "type": "object",
            "properties": {
                "data": {
                    "description": "Data contains the detailed information about sale report",
                    "allOf": [
                        {
                            "$ref": "#/definitions/salereportmodel.SaleReport"
                        }
                    ]
                }
            }
        },
        "salereportmodel.SaleReport": {
            "type": "object",
            "properties": {
                "details": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/salereportetailmodel.SaleReportDetail"
                    }
                },
                "timeFrom": {
                    "type": "string",
                    "example": "2023-12-03T15:02:19.62113565Z"
                },
                "timeTo": {
                    "type": "string",
                    "example": "2023-12-03T15:02:19.62113565Z"
                },
                "total": {
                    "type": "integer",
                    "example": 100000
                }
            }
        },
        "stockreportdetailmodel.StockReportDetail": {
            "type": "object",
            "properties": {
                "book": {
                    "$ref": "#/definitions/bookmodel.SimpleBook"
                },
                "final": {
                    "type": "integer",
                    "example": 30
                },
                "import": {
                    "type": "integer",
                    "example": 100
                },
                "initial": {
                    "type": "integer",
                    "example": 0
                },
                "modify": {
                    "type": "integer",
                    "example": -60
                },
                "sell": {
                    "type": "integer",
                    "example": -10
                }
            }
        },
        "stockreportmodel.ReqFindStockReport": {
            "type": "object",
            "properties": {
                "timeFrom": {
                    "type": "integer",
                    "example": 1701388800
                },
                "timeTo": {
                    "type": "integer",
                    "example": 1704067199
                }
            }
        },
        "stockreportmodel.ResFindStockReport": {
            "type": "object",
            "properties": {
                "data": {
                    "description": "Data contains the detailed information about stock report",
                    "allOf": [
                        {
                            "$ref": "#/definitions/stockreportmodel.StockReport"
                        }
                    ]
                }
            }
        },
        "stockreportmodel.StockReport": {
            "type": "object",
            "properties": {
                "details": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/stockreportdetailmodel.StockReportDetail"
                    }
                },
                "id": {
                    "type": "string",
                    "example": "report id"
                },
                "timeFrom": {
                    "type": "string",
                    "example": "2023-12-03T15:02:19.62113565Z"
                },
                "timeTo": {
                    "type": "string",
                    "example": "2023-12-03T15:02:19.62113565Z"
                }
            }
        },
        "supplierdebtmodel.SupplierDebt": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string",
                    "example": "1709500431"
                },
                "createdBy": {
                    "$ref": "#/definitions/usermodel.SimpleUser"
                },
                "id": {
                    "type": "string",
                    "example": "debt001"
                },
                "qty": {
                    "type": "integer",
                    "example": -70000
                },
                "qtyLeft": {
                    "type": "integer",
                    "example": -100000
                },
                "supplierId": {
                    "type": "string",
                    "example": "123"
                },
                "type": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/enum.DebtType"
                        }
                    ],
                    "example": "Debt"
                }
            }
        },
        "supplierdebtreportdetailmodel.SupplierDebtReportDetail": {
            "type": "object",
            "properties": {
                "debt": {
                    "type": "integer",
                    "example": -40000
                },
                "final": {
                    "type": "integer",
                    "example": 80000
                },
                "initial": {
                    "type": "integer",
                    "example": 100000
                },
                "pay": {
                    "type": "integer",
                    "example": 20000
                },
                "supplier": {
                    "$ref": "#/definitions/importnotemodel.SimpleSupplier"
                }
            }
        },
        "supplierdebtreportmodel.ReqFindSupplierDebtReport": {
            "type": "object",
            "properties": {
                "timeFrom": {
                    "type": "integer",
                    "example": 1701388800
                },
                "timeTo": {
                    "type": "integer",
                    "example": 1704067199
                }
            }
        },
        "supplierdebtreportmodel.ResFindSupplierDebtReport": {
            "type": "object",
            "properties": {
                "data": {
                    "description": "Data contains the detailed information about supplier debt report",
                    "allOf": [
                        {
                            "$ref": "#/definitions/supplierdebtreportmodel.SupplierDebtReport"
                        }
                    ]
                }
            }
        },
        "supplierdebtreportmodel.SupplierDebtReport": {
            "type": "object",
            "properties": {
                "details": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/supplierdebtreportdetailmodel.SupplierDebtReportDetail"
                    }
                },
                "id": {
                    "type": "string"
                },
                "timeFrom": {
                    "type": "string",
                    "example": "2023-12-03T15:02:19.62113565Z"
                },
                "timeTo": {
                    "type": "string",
                    "example": "2023-12-03T15:02:19.62113565Z"
                }
            }
        },
        "suppliermodel.ReqCreateSupplier": {
            "type": "object",
            "properties": {
                "debt": {
                    "type": "integer",
                    "example": -100000
                },
                "email": {
                    "type": "string",
                    "example": "a@gmail.com"
                },
                "id": {
                    "type": "string",
                    "example": "123"
                },
                "name": {
                    "type": "string",
                    "example": "Nguyễn Văn A"
                },
                "phone": {
                    "type": "string",
                    "example": "0123456789"
                }
            }
        },
        "suppliermodel.ReqUpdateDebtSupplier": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "example": "supplier debt id"
                },
                "qtyUpdate": {
                    "type": "integer",
                    "example": 10000
                }
            }
        },
        "suppliermodel.ReqUpdateInfoSupplier": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "b@gmail.com"
                },
                "name": {
                    "type": "string",
                    "example": "tên đã đổi"
                },
                "phone": {
                    "type": "string",
                    "example": "1234567890"
                }
            }
        },
        "suppliermodel.ResListSupplier": {
            "type": "object",
            "properties": {
                "data": {
                    "description": "Data contains list of supplier.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/suppliermodel.Supplier"
                    }
                },
                "filter": {
                    "description": "Filter contains the filter parameters used to retrieve supplier.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/filter.SupplierImportFilter"
                        }
                    ]
                },
                "paging": {
                    "description": "Paging provides information about pagination.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/common.Paging"
                        }
                    ]
                }
            }
        },
        "suppliermodel.ResSeeDebtSupplier": {
            "type": "object",
            "properties": {
                "data": {
                    "description": "Data contains the detailed information about supplier's debts.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/supplierdebtmodel.SupplierDebt"
                    }
                },
                "filter": {
                    "description": "Filter contains the filter parameters used to retrieve debts.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/filter.SupplierDebtFilter"
                        }
                    ]
                },
                "paging": {
                    "description": "Paging provides information about pagination.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/common.Paging"
                        }
                    ]
                }
            }
        },
        "suppliermodel.ResSeeImportNoteSupplier": {
            "type": "object",
            "properties": {
                "data": {
                    "description": "Data contains the detailed information about supplier's import notes.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/importnotemodel.ImportNote"
                    }
                },
                "filter": {
                    "description": "Filter contains the filter parameters used to retrieve import notes.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/filter.SupplierImportFilter"
                        }
                    ]
                },
                "paging": {
                    "description": "Paging provides information about pagination.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/common.Paging"
                        }
                    ]
                }
            }
        },
        "suppliermodel.ResSupplierCreate": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "string",
                    "example": "123"
                }
            }
        },
        "suppliermodel.Supplier": {
            "type": "object",
            "properties": {
                "debt": {
                    "type": "integer",
                    "example": -100000
                },
                "email": {
                    "type": "string",
                    "example": "a@gmail.com"
                },
                "id": {
                    "type": "string",
                    "example": "123"
                },
                "name": {
                    "type": "string",
                    "example": "Nguyễn Văn A"
                },
                "phone": {
                    "type": "string",
                    "example": "0123456789"
                }
            }
        },
        "tokenprovider.Token": {
            "type": "object",
            "properties": {
                "created": {
                    "type": "string",
                    "example": "2023-12-03T15:02:19.62113565Z"
                },
                "expiry": {
                    "type": "integer",
                    "example": 2592000
                },
                "token": {
                    "type": "string",
                    "example": "token"
                }
            }
        },
        "usermodel.Account": {
            "type": "object",
            "properties": {
                "accessToken": {
                    "$ref": "#/definitions/tokenprovider.Token"
                },
                "refreshToken": {
                    "$ref": "#/definitions/tokenprovider.Token"
                }
            }
        },
        "usermodel.Filter": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "boolean",
                    "example": true
                },
                "searchKey": {
                    "type": "string",
                    "example": "id, name, phone, email, address"
                }
            }
        },
        "usermodel.ReqCreateUser": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string",
                    "example": "HCM"
                },
                "email": {
                    "type": "string",
                    "example": "a@gmail.com"
                },
                "name": {
                    "type": "string",
                    "example": "Nguyễn Văn A"
                },
                "phone": {
                    "type": "string",
                    "example": "0919199112"
                },
                "roleId": {
                    "type": "string",
                    "example": "role id"
                }
            }
        },
        "usermodel.ReqLoginUser": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "admin@gmail.com"
                },
                "password": {
                    "type": "string",
                    "example": "app123"
                }
            }
        },
        "usermodel.ReqResetPasswordUser": {
            "type": "object",
            "properties": {
                "userSenderPass": {
                    "type": "string",
                    "example": "mật khẩu người gửi"
                }
            }
        },
        "usermodel.ReqUpdateInfoUser": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string",
                    "example": "bỏ trường này nếu không muốn update địa chỉ"
                },
                "name": {
                    "type": "string",
                    "example": "bỏ trường này nếu không muốn update tên"
                },
                "phone": {
                    "type": "string",
                    "example": "bỏ trường này nếu không muốn update sđt"
                }
            }
        },
        "usermodel.ReqUpdatePasswordUser": {
            "type": "object",
            "properties": {
                "newPassword": {
                    "type": "string",
                    "example": "mật khẩu mới"
                },
                "oldPassword": {
                    "type": "string",
                    "example": "mật khẩu cũ"
                }
            }
        },
        "usermodel.ReqUpdateRoleUser": {
            "type": "object",
            "properties": {
                "roleId": {
                    "type": "string",
                    "example": "role id"
                }
            }
        },
        "usermodel.ReqUpdateStatusUsers": {
            "type": "object",
            "properties": {
                "isActive": {
                    "type": "boolean",
                    "example": true
                },
                "userIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "usermodel.ResCreateUser": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "string",
                    "example": "123"
                }
            }
        },
        "usermodel.ResListUser": {
            "type": "object",
            "properties": {
                "data": {
                    "description": "Data contains list of user.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/usermodel.ResUser"
                    }
                },
                "filter": {
                    "description": "Filter contains the filter parameters used to retrieve user.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/usermodel.Filter"
                        }
                    ]
                },
                "paging": {
                    "description": "Paging provides information about pagination.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/common.Paging"
                        }
                    ]
                }
            }
        },
        "usermodel.ResUser": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string",
                    "example": "HCM"
                },
                "email": {
                    "type": "string",
                    "example": "b@gmail.com"
                },
                "id": {
                    "type": "string",
                    "example": "user id"
                },
                "isActive": {
                    "type": "boolean",
                    "example": true
                },
                "name": {
                    "type": "string",
                    "example": "Nguyễn Văn B"
                },
                "phone": {
                    "type": "string",
                    "example": "0919199112"
                },
                "role": {
                    "$ref": "#/definitions/rolemodel.SimpleRole"
                }
            }
        },
        "usermodel.SimpleUser": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "example": "user id"
                },
                "name": {
                    "type": "string",
                    "example": "Nguyễn Văn A"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/v1",
	Schemes:          []string{},
	Title:            "Book Store Management API",
	Description:      "This is a sample server Book Store Management API server.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
